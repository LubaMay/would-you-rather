{"version":3,"sources":["utils/_DATA.js","utils/api.js","actions/users.js","actions/questions.js","actions/authedUser.js","actions/shared.js","components/Question.js","components/Questions.js","components/Dashboard.js","components/NewQuestion.js","components/QuestionPage.js","components/Leaderboard.js","components/Nav.js","components/App.js","reducers/index.js","reducers/authedUser.js","reducers/users.js","reducers/questions.js","middleware/logger.js","middleware/index.js","index.js"],"names":["users","sarahedo","id","name","avatarURL","answers","am8ehyc8byjqgar0jgpub9","loxhs1bqm25b708cmbf3g","questions","tylermcginnis","vthrdm985a262al8qx3do","xj352vofupe1dqz9emx13r","johndoe","author","timestamp","optionOne","votes","text","optionTwo","formatQuestion","optionOneText","optionTwoText","Math","random","toString","substring","Date","now","saveQuestion","question","Promise","res","rej","authedUser","formattedQuestion","setTimeout","console","log","concat","_saveQuestion","saveQuestionAnswer","info","qid","answer","_saveQuestionAnswer","RECEIVE_USERS","RECEIVE_QUESTIONS","ADD_QUESTION","SAVE_QUESTIONS_ANSWER","handleAddQuestion","dispatch","getState","then","type","addQuestion","handleSaveAnswer","saveAnswer","SET_AUTHED_USER","handleInitialData","showLoading","all","receiveUsers","receiveQuestions","hideLoading","Question","this","props","user","questionPreview","slice","className","src","alt","to","Component","withRouter","connect","Questions","questionList","map","currentUser","answeredQuestions","Object","keys","questionIds","sort","a","b","spreaded","filter","el","includes","useState","key","setKey","Tabs","activeKey","onSelect","k","Tab","eventKey","title","NewQuestion","state","handleChange","e","value","target","setState","handleSubmit","preventDefault","onSubmit","placeholder","onChange","maxLength","QuestionPage","toResults","onRadioChange","formSubmit","checked","match","params","Leaderboard","usersList","answeredQs","length","createdQs","score","values","Nav","exact","activeClassName","App","loading","path","component","Dashboard","combineReducers","action","loadingBar","loadingBarReducer","logger","store","next","group","returnValue","groupEnd","applyMiddleware","thunk","createStore","reducer","middleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.98202e6a.chunk.js","sourcesContent":["let users = {\n  sarahedo: {\n    id: \"sarahedo\",\n    name: \"Sarah Edo\",\n    avatarURL:\n      \"https://s3.amazonaws.com/cms-assets.tutsplus.com/uploads/users/107/profiles/2394/profileImage/avatar-new400.jpg\",\n    answers: {\n      \"8xf0y6ziyjabvozdd253nd\": \"optionOne\",\n      \"6ni6ok3ym7mf1p33lnez\": \"optionTwo\",\n      am8ehyc8byjqgar0jgpub9: \"optionTwo\",\n      loxhs1bqm25b708cmbf3g: \"optionTwo\",\n    },\n    questions: [\"8xf0y6ziyjabvozdd253nd\", \"am8ehyc8byjqgar0jgpub9\"],\n  },\n  tylermcginnis: {\n    id: \"tylermcginnis\",\n    name: \"Tyler McGinnis\",\n    avatarURL:\n      \"https://external-preview.redd.it/8v3LkYRXddBkoqJkH_0OixpKyqcEOKqokxpDzAc2JYI.jpg?auto=webp&s=7348fcc4defdcfb5ca82553fcca8184061147d54\",\n    answers: {\n      vthrdm985a262al8qx3do: \"optionOne\",\n      xj352vofupe1dqz9emx13r: \"optionTwo\",\n    },\n    questions: [\"loxhs1bqm25b708cmbf3g\", \"vthrdm985a262al8qx3do\"],\n  },\n  johndoe: {\n    id: \"johndoe\",\n    name: \"John Doe\",\n    avatarURL: \"https://miro.medium.com/max/566/1*n-FPAObgPCDmxNKeGqyWvw.jpeg\",\n    answers: {\n      xj352vofupe1dqz9emx13r: \"optionOne\",\n      vthrdm985a262al8qx3do: \"optionTwo\",\n      \"6ni6ok3ym7mf1p33lnez\": \"optionTwo\",\n    },\n    questions: [\"6ni6ok3ym7mf1p33lnez\", \"xj352vofupe1dqz9emx13r\"],\n  },\n};\n\nlet questions = {\n  \"8xf0y6ziyjabvozdd253nd\": {\n    id: \"8xf0y6ziyjabvozdd253nd\",\n    author: \"sarahedo\",\n    timestamp: 1467166872634,\n    optionOne: {\n      votes: [\"sarahedo\"],\n      text: \"have horrible short term memory\",\n    },\n    optionTwo: {\n      votes: [],\n      text: \"have horrible long term memory\",\n    },\n  },\n  \"6ni6ok3ym7mf1p33lnez\": {\n    id: \"6ni6ok3ym7mf1p33lnez\",\n    author: \"johndoe\",\n    timestamp: 1468479767190,\n    optionOne: {\n      votes: [],\n      text: \"become a superhero\",\n    },\n    optionTwo: {\n      votes: [\"johndoe\", \"sarahedo\"],\n      text: \"become a supervillain\",\n    },\n  },\n  am8ehyc8byjqgar0jgpub9: {\n    id: \"am8ehyc8byjqgar0jgpub9\",\n    author: \"sarahedo\",\n    timestamp: 1488579767190,\n    optionOne: {\n      votes: [],\n      text: \"be telekinetic\",\n    },\n    optionTwo: {\n      votes: [\"sarahedo\"],\n      text: \"be telepathic\",\n    },\n  },\n  loxhs1bqm25b708cmbf3g: {\n    id: \"loxhs1bqm25b708cmbf3g\",\n    author: \"tylermcginnis\",\n    timestamp: 1482579767190,\n    optionOne: {\n      votes: [],\n      text: \"be a front-end developer\",\n    },\n    optionTwo: {\n      votes: [\"sarahedo\"],\n      text: \"be a back-end developer\",\n    },\n  },\n  vthrdm985a262al8qx3do: {\n    id: \"vthrdm985a262al8qx3do\",\n    author: \"tylermcginnis\",\n    timestamp: 1489579767190,\n    optionOne: {\n      votes: [\"tylermcginnis\"],\n      text: \"find $50 yourself\",\n    },\n    optionTwo: {\n      votes: [\"johndoe\"],\n      text: \"have your best friend find $500\",\n    },\n  },\n  xj352vofupe1dqz9emx13r: {\n    id: \"xj352vofupe1dqz9emx13r\",\n    author: \"johndoe\",\n    timestamp: 1493579767190,\n    optionOne: {\n      votes: [\"johndoe\"],\n      text: \"write JavaScript\",\n    },\n    optionTwo: {\n      votes: [\"tylermcginnis\"],\n      text: \"write Swift\",\n    },\n  },\n};\n\nfunction generateUID() {\n  return (\n    Math.random().toString(36).substring(2, 15) +\n    Math.random().toString(36).substring(2, 15)\n  );\n}\n\nexport function _getUsers() {\n  return new Promise((res, rej) => {\n    setTimeout(() => res({ ...users }), 1000);\n  });\n}\n\nexport function _getQuestions() {\n  return new Promise((res, rej) => {\n    setTimeout(() => res({ ...questions }), 1000);\n  });\n}\n\nexport function formatQuestion({ optionOneText, optionTwoText, author }) {\n  return {\n    id: generateUID(),\n    timestamp: Date.now(),\n    author,\n    optionOne: {\n      votes: [],\n      text: optionOneText,\n    },\n    optionTwo: {\n      votes: [],\n      text: optionTwoText,\n    },\n  };\n}\n\nexport function _saveQuestion(question) {\n  return new Promise((res, rej) => {\n    const authedUser = question.author;\n    const formattedQuestion = formatQuestion(question);\n\n    setTimeout(() => {\n      questions = {\n        ...questions,\n        [formattedQuestion.id]: formattedQuestion,\n      };\n      console.log(\"user from api\", users, authedUser);\n      users = {\n        ...users,\n        [authedUser]: {\n          ...users[authedUser],\n          questions: users[authedUser].questions.concat([formattedQuestion.id]),\n        },\n      };\n      console.log(\"users updated\", users, users[authedUser]);\n      res(formattedQuestion);\n    }, 1000);\n  });\n}\n\nexport function _saveQuestionAnswer({ authedUser, qid, answer }) {\n  return new Promise((res, rej) => {\n    setTimeout(() => {\n      users = {\n        ...users,\n        [authedUser]: {\n          ...users[authedUser],\n          answers: {\n            ...users[authedUser].answers,\n            [qid]: answer,\n          },\n        },\n      };\n\n      questions = {\n        ...questions,\n        [qid]: {\n          ...questions[qid],\n          [answer]: {\n            ...questions[qid][answer],\n            votes: questions[qid][answer].votes.concat([authedUser]),\n          },\n        },\n      };\n\n      res();\n    }, 500);\n  });\n}\n","import {\n    _getUsers,\n    _getQuestions,\n    _saveQuestion,\n    _saveQuestionAnswer\n} from './_DATA'\n\nexport function getInitialData() {\n    return Promise.all([\n        _getUsers(),\n        _getQuestions(),\n    ]).then(([users, questions]) => ({\n        users,\n        questions,\n    }))\n}\n\nexport function saveQuestion(question) {\n    return _saveQuestion(question)\n}\n\nexport function saveQuestionAnswer(info) {\n    return _saveQuestionAnswer(info)\n}","export const RECEIVE_USERS = 'GET_USERS'\n\nexport function receiveUsers(users) {\n    return {\n        type: RECEIVE_USERS,\n        users,\n    }\n}","import { saveQuestionAnswer, saveQuestion } from \"../utils/api\";\n\nexport const RECEIVE_QUESTIONS = \"GET_QUESTIONS\";\nexport const ADD_QUESTION = \"ADD_QUESTION\";\nexport const SAVE_QUESTIONS_ANSWER = \"SAVE_QUESTIONS_ANSWER\";\n\nexport function receiveQuestions(questions) {\n  return {\n    type: RECEIVE_QUESTIONS,\n    questions,\n  };\n}\n\nexport function addQuestion(question) {\n  return {\n    type: ADD_QUESTION,\n    question,\n  };\n}\n\nexport function handleAddQuestion(optionOneText, optionTwoText) {\n  return (dispatch, getState) => {\n    const authedUser = getState();\n    console.log(\"USER:\", authedUser);\n    return saveQuestion({\n      optionOneText,\n      optionTwoText,\n      author: authedUser.authedUser,\n    }).then((question) => dispatch(addQuestion(question)));\n  };\n}\n\nexport function saveAnswer(qid, answer) {\n  return {\n    type: SAVE_QUESTIONS_ANSWER,\n    answer,\n    qid,\n  };\n}\n\nexport function handleSaveAnswer(qid, answer) {\n  return (dispatch, getState) => {\n    const { authedUser, questions } = getState();\n    return saveQuestionAnswer({\n      answer,\n      authedUser,\n      qid: questions[qid],\n    }).then((answer) => dispatch(saveAnswer(qid, answer)));\n  };\n}\n","export const SET_AUTHED_USER = 'SET_AUTHED_USER'\n\nexport function setAuthedUser(id) {\n    return {\n        type: SET_AUTHED_USER,\n        id\n    }\n}","import { getInitialData } from \"../utils/api\";\nimport { receiveUsers } from \"./users\";\nimport { receiveQuestions } from \"./questions\";\nimport { setAuthedUser } from \"./authedUser\";\nimport { showLoading, hideLoading } from \"react-redux-loading\";\n\nconst AUTHED_ID = \"sarahedo\";\n\nexport function handleInitialData() {\n  return (dispatch) => {\n    dispatch(showLoading());\n    return getInitialData().then(({ users, questions }) => {\n      dispatch(receiveUsers(users));\n      dispatch(receiveQuestions(questions));\n      dispatch(setAuthedUser(AUTHED_ID));\n      dispatch(hideLoading());\n    });\n  };\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { formatQuestion } from \"../utils/_DATA\";\nimport { Link, withRouter } from \"react-router-dom\";\n\nclass Question extends Component {\n  render() {\n    const { optionOneText, user, question } = this.props;\n\n    const { text } = optionOneText;\n    const questionPreview = text.slice(0, 10) + \"...\";\n    const { name, avatarURL } = user;\n    const { id } = question;\n    console.log(\"question\", question);\n    return (\n      <div className=\"question\">\n        <div>\n          <div className=\"results-authorName\">\n            <span>{name} asks: </span>\n          </div>\n        </div>\n\n        <div className=\"board dashboard\">\n          <div className=\"leaderboard-grid\">\n            <div className=\"leaderboard-img\">\n              <img\n                src={avatarURL}\n                alt={`Avatar of ${name}`}\n                className=\"avatar\"\n              />\n            </div>\n\n            <div className=\"leaderboard-info\">\n              <h5>Would You Rather</h5>\n              <p>...{questionPreview}</p>\n              <Link to={`/question/${id}`}>\n                <button className=\"btn\">View Poll</button>\n              </Link>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps({ authedUser, users, questions }, { id }) {\n  console.log(\"id\", id);\n  const question = questions[id];\n\n  const optionOneText = question.optionOne;\n  const optionTwoText = question.optionTwo;\n\n  const user = users[question.author];\n\n  return {\n    authedUser,\n    optionOneText,\n    user,\n    question,\n  };\n}\n\nexport default withRouter(connect(mapStateToProps)(Question));\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Question from \"./Question\";\n\nclass Questions extends Component {\n  render() {\n    const { questionList } = this.props;\n    console.log(\"Questions list\", questionList);\n    return (\n      <div>\n        {questionList.map((id) => (\n          <div key={id}>\n            <Question id={id} />\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps({ authedUser, users, questions }, { type }) {\n  const currentUser = users[authedUser];\n  const answeredQuestions = Object.keys(currentUser.answers);\n  const questionIds = Object.keys(questions).sort(\n    (a, b) => questions[b].timestamp - questions[a].timestamp\n  );\n  console.log(\"IDS\", questionIds);\n\n  if (type === \"unanswered\") {\n    const spreaded = [...questionIds];\n    console.log(\"WTF???\", spreaded);\n    const questionList = spreaded.filter((el) => {\n      return !answeredQuestions.includes(el);\n    });\n    return {\n      currentUser,\n      questionList,\n    };\n  } else if (type === \"answered\") {\n    const spreaded = [...questionIds];\n    const questionList = spreaded.filter((el) => {\n      return answeredQuestions.includes(el);\n    });\n    return {\n      currentUser,\n      questionList,\n    };\n  }\n}\n\nexport default connect(mapStateToProps)(Questions);\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport Questions from \"./Questions\";\nimport Tabs from \"react-bootstrap/Tabs\";\nimport Tab from \"react-bootstrap/Tab\";\n\nfunction Dashboard() {\n  const [key, setKey] = useState(\"unanswered\");\n\n  return (\n    <div>\n      <Tabs\n        activeKey={key}\n        onSelect={(k) => setKey(k)}\n        className=\"mb-3 question center\"\n      >\n        <Tab eventKey=\"unanswered\" title=\"Unanswered questions\"></Tab>\n        <Tab eventKey=\"answered\" title=\"Answered questions\"></Tab>\n      </Tabs>\n      <Questions type={key} />\n    </div>\n  );\n}\n\nexport default connect()(Dashboard);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { handleAddQuestion } from \"../actions/questions\";\n\nclass NewQuestion extends Component {\n  state = {\n    optionOne: \"\",\n    optionTwo: \"\",\n  };\n\n  handleChange = (e) => {\n    const value = e.target.value;\n\n    this.setState(() => ({\n      ...this.state,\n      [e.target.name]: value,\n    }));\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    console.log(\"Option one: \", this.state.optionOne);\n    console.log(\"Option two: \", this.state.optionTwo);\n\n    const { dispatch } = this.props;\n    dispatch(handleAddQuestion(this.state.optionOne, this.state.optionTwo));\n\n    this.setState(() => ({\n      optionOne: \"\",\n      optionTwo: \"\",\n    }));\n  };\n\n  render() {\n    const { optionOne, optionTwo } = this.state;\n    return (\n      <div className=\"container\">\n        <h3 className=\"center question bg\">Create New Question</h3>\n        <form className=\"new-question question\" onSubmit={this.handleSubmit}>\n          <p>Complete the question:</p>\n          <h3>Would you rather...</h3>\n          <input\n            placeholder=\"Enter Option One Text Here\"\n            type=\"text\"\n            name=\"optionOne\"\n            value={optionOne}\n            onChange={this.handleChange}\n            className=\"textarea\"\n            maxLength={280}\n          />\n          <p className=\"center\">OR</p>\n          <input\n            placeholder=\"Enter Option Two Text Here\"\n            type=\"text\"\n            name=\"optionTwo\"\n            value={optionTwo}\n            onChange={this.handleChange}\n            className=\"textarea\"\n            maxLength={280}\n          />\n          <button\n            className=\"btn\"\n            type=\"submit\"\n            // disabled={text === ''}\n          >\n            Submit\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default connect()(NewQuestion);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { formatQuestion } from \"../utils/_DATA\";\nimport { handleSaveAnswer } from \"../actions/questions\";\nimport Question from \"./Question\";\nimport { Redirect } from \"react-router-dom\";\n\nclass QuestionPage extends Component {\n  state = {\n    answer: \"\",\n    toResults: false,\n  };\n\n  onRadioChange = (e) => {\n    const value = e.target.value;\n\n    this.setState(() => ({\n      answer: value,\n    }));\n  };\n\n  formSubmit = (e) => {\n    e.preventDefault();\n\n    const { answer } = this.state;\n    const { dispatch, id, authedUser } = this.props;\n\n    dispatch(handleSaveAnswer(answer, authedUser));\n\n    this.setState(() => ({\n      answer: \"\",\n      toResults: id ? false : true,\n    }));\n  };\n\n  render() {\n    const { answer, toResults } = this.state;\n    const { optionOneText, optionTwoText, user, id } = this.props;\n    const { name, avatarURL } = user;\n\n    if (toResults === true) {\n      return <Redirect to=\"/results\" />;\n    }\n\n    return (\n      <div className=\"question\">\n        <div>\n          <span>{name} asks: </span>\n        </div>\n\n        <div className=\"question-info\">\n          <img src={avatarURL} alt={`Avatar of ${name}`} className=\"avatar\" />\n          <div>\n            <h5>Would You Rather...</h5>\n            <form className=\"vote-form\" onSubmit={this.formSubmit}>\n              <div className=\"radio\">\n                <label>\n                  <input\n                    type=\"radio\"\n                    value={optionOneText}\n                    checked={answer === optionOneText}\n                    onChange={this.onRadioChange}\n                  />\n                  {optionOneText}\n                </label>\n              </div>\n              <div className=\"radio\">\n                <label>\n                  <input\n                    type=\"radio\"\n                    value={optionTwoText}\n                    checked={answer === optionTwoText}\n                    onChange={this.onRadioChange}\n                  />\n                  {optionTwoText}\n                </label>\n              </div>\n              <button className=\"btn\" type=\"submit\">\n                Submit\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps({ authedUser, questions, users }, props) {\n  console.log(\"props\", props);\n  let { id } = props.match.params;\n  const question = questions[id];\n  console.log(\"question\", question);\n  const optionOneText = question.optionOne.text;\n  const optionTwoText = question.optionTwo.text;\n  const user = users[question.author];\n  console.log(\"this is the author: \", user);\n\n  return {\n    id,\n    question,\n    optionOneText,\n    optionTwoText,\n    user,\n    authedUser,\n    question: question\n      ? formatQuestion(optionOneText, optionTwoText, user)\n      : null,\n  };\n}\n\nexport default connect(mapStateToProps)(QuestionPage);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { formatQuestion } from \"../utils/_DATA\";\n\nclass Leaderboard extends Component {\n  render() {\n    const { usersList } = this.props;\n\n    return (\n      <div className=\"question leaderboard\">\n        {usersList.map((user, id) => {\n          const { name, avatarURL, answers, questions } = user;\n\n          const answeredQs = Object.keys(answers).length;\n          const createdQs = questions.length;\n          const score = answeredQs + createdQs;\n\n          return (\n            <div className=\"board\" key={id}>\n              <div className=\"leaderboard-grid\">\n                <div className=\"leaderboard-img\">\n                  <img\n                    src={avatarURL}\n                    alt={`Avatar of ${name}`}\n                    className=\"avatar\"\n                  />\n                </div>\n\n                <div className=\"leaderboard-info\">\n                  <h3>{name}</h3>\n                  <p>Answered Questions: {answeredQs}</p>\n                  <hr />\n                  <p>Created Questions: {createdQs}</p>\n                </div>\n\n                <div className=\"score\">\n                  <p>Score</p>\n                  <p>\n                    <span className=\"score-shape\">{score}</span>\n                  </p>\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps({ users }) {\n  console.log(\"users\", users);\n  const usersList = Object.values(users);\n\n  return {\n    usersList,\n  };\n}\n\nexport default connect(mapStateToProps)(Leaderboard);\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nexport default function Nav() {\n  return (\n    <nav className=\"nav\">\n      <ul>\n        <li>\n          <NavLink to=\"/\" exact activeClassName=\"active\">\n            Home\n          </NavLink>\n        </li>\n        <li>\n          <NavLink to=\"/add\" activeClassName=\"active\">\n            New Question\n          </NavLink>\n        </li>\n        <li>\n          <NavLink to=\"/leaderboard\" activeClassName=\"active\">\n            Leader Board\n          </NavLink>\n        </li>\n      </ul>\n    </nav>\n  );\n}\n","import React, { Component, Fragment } from \"react\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { handleInitialData } from \"../actions/shared\";\nimport Dashboard from \"./Dashboard\";\nimport LoadingBar from \"react-redux-loading\";\nimport NewQuestion from \"./NewQuestion\";\nimport QuestionPage from \"./QuestionPage\";\nimport Question from \"./Question\";\nimport Leaderboard from \"./Leaderboard\";\nimport Nav from \"./Nav\";\n\nclass App extends Component {\n  componentDidMount() {\n    const { dispatch } = this.props;\n    dispatch(handleInitialData());\n  }\n\n  render() {\n    return (\n      <Router>\n        <Fragment>\n          <LoadingBar />\n          <div className=\"container\">\n            <Nav />\n            {this.props.loading === true ? null : (\n              <div>\n                {/* <QuestionPage\n                  match={{ params: { id: \"8xf0y6ziyjabvozdd253nd\" } }}\n                /> */}\n                <Route path=\"/\" exact component={Dashboard} />\n                <Route path=\"/add\" component={NewQuestion} />\n                <Route path=\"/leaderboard\" component={Leaderboard} />\n                <Route path=\"/question/:id\" component={QuestionPage} />\n              </div>\n            )}\n          </div>\n        </Fragment>\n      </Router>\n    );\n  }\n}\n\nfunction mapStateToProps({ authedUser }) {\n  return {\n    loading: authedUser === null,\n  };\n}\n\nexport default connect(mapStateToProps)(App);\n","import { combineReducers } from \"redux\";\nimport users from \"./users\";\nimport questions from \"./questions\";\nimport authedUser from \"./authedUser\";\nimport { loadingBarReducer } from \"react-redux-loading\";\n\nexport default combineReducers({\n    authedUser,\n    users,\n    questions,\n    loadingBar: loadingBarReducer,\n})","import { SET_AUTHED_USER } from '../actions/authedUser'\n\nexport default function authedUser(state = null, action) {\n    switch (action.type) {\n        case SET_AUTHED_USER:\n            return action.id\n        default:\n            return state\n    }\n}","import { RECEIVE_USERS } from \"../actions/users\";\nimport { ADD_QUESTION } from \"../actions/questions\";\n\nexport default function users(state = {}, action) {\n  switch (action.type) {\n    case RECEIVE_USERS:\n      return {\n        ...state,\n        ...action.users,\n      };\n    case ADD_QUESTION:\n      console.log(\"state\", state);\n      console.log(\"action\", action);\n      return {\n        ...state,\n        [action.question.author]: {\n          ...state[action.question.author],\n\n          questions: state[action.question.author].questions.concat([\n            action.question.id,\n          ]),\n        },\n      };\n    default:\n      return state;\n  }\n}\n","import { RECEIVE_QUESTIONS, SAVE_QUESTIONS_ANSWER, ADD_QUESTION } from '../actions/questions'\n\nexport default function questions(state = {}, action) {\n    switch (action.type) {\n        case RECEIVE_QUESTIONS:\n            return {\n                ...state,\n                ...action.questions\n            }\n        case ADD_QUESTION:\n            return {\n                ...state,\n                [action.question.id]: action.question\n            }\n        case SAVE_QUESTIONS_ANSWER:\n            return {\n                ...state,\n                [action.questions.id.answer]: action.answer\n            }\n        default:\n            return state\n    }\n}","const logger = (store) => (next) => (action) => {\n    console.group(action.type)\n    console.log('The action is: ', action)\n    const returnValue = next(action)\n    console.log('The new state is: ', store.getState())\n    console.groupEnd()\n    return returnValue\n}\n\nexport default logger","import thunk from 'redux-thunk'\nimport logger from './logger'\nimport { applyMiddleware } from 'redux'\n\nexport default applyMiddleware(\n    thunk,\n    logger\n)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport reducer from './reducers'\nimport middleware from './middleware'\n\nconst store = createStore(reducer, middleware)\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n  ,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}
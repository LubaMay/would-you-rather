{"version":3,"sources":["utils/_DATA.js","utils/api.js","actions/users.js","actions/questions.js","actions/authedUser.js","actions/shared.js","components/Question.js","components/Questions.js","components/Dashboard.js","components/QuestionPage.js","components/NewQuestion.js","components/Results.js","components/App.js","reducers/index.js","reducers/authedUser.js","reducers/users.js","reducers/questions.js","middleware/logger.js","middleware/index.js","index.js"],"names":["users","sarahedo","id","name","avatarURL","answers","questions","tylermcginnis","johndoe","author","timestamp","optionOne","votes","text","optionTwo","formatQuestion","optionOneText","optionTwoText","Math","random","toString","substring","Date","now","saveQuestionAnswer","info","authedUser","qid","answer","Promise","res","rej","setTimeout","concat","_saveQuestionAnswer","RECEIVE_USERS","RECEIVE_QUESTIONS","SAVE_QUESTIONS_ANSWER","handleSaveAnswer","vote","dispatch","getState","then","type","saveAnswer","SET_AUTHED_USER","handleInitialData","showLoading","all","receiveUsers","receiveQuestions","hideLoading","Question","this","props","user","questionPreview","slice","className","src","alt","Component","connect","question","Questions","questionList","map","currentUser","answeredQuestions","Object","keys","questionIds","sort","a","b","filter","el","includes","Dashboard","Tabs","Tab","eventKey","title","QuestionPage","state","toResults","onRadioChange","e","value","target","setState","formSubmit","preventDefault","onSubmit","checked","onChange","match","params","console","log","Results","App","loading","combineReducers","action","loadingBar","loadingBarReducer","logger","store","next","group","returnValue","groupEnd","applyMiddleware","thunk","createStore","reducer","middleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1cf2da26.chunk.js","sourcesContent":["let users = {\n    sarahedo: {\n        id: 'sarahedo',\n        name: 'Sarah Edo',\n        avatarURL: 'https://tylermcginnis.com/would-you-rather/sarah.jpg',\n        answers: {\n            \"8xf0y6ziyjabvozdd253nd\": 'optionOne',\n            \"6ni6ok3ym7mf1p33lnez\": 'optionTwo',\n            \"am8ehyc8byjqgar0jgpub9\": 'optionTwo',\n            \"loxhs1bqm25b708cmbf3g\": 'optionTwo'\n        },\n        questions: ['8xf0y6ziyjabvozdd253nd', 'am8ehyc8byjqgar0jgpub9']\n    },\n    tylermcginnis: {\n        id: 'tylermcginnis',\n        name: 'Tyler McGinnis',\n        avatarURL: 'https://tylermcginnis.com/would-you-rather/tyler.jpg',\n        answers: {\n            \"vthrdm985a262al8qx3do\": 'optionOne',\n            \"xj352vofupe1dqz9emx13r\": 'optionTwo',\n        },\n        questions: ['loxhs1bqm25b708cmbf3g', 'vthrdm985a262al8qx3do'],\n    },\n    johndoe: {\n        id: 'johndoe',\n        name: 'John Doe',\n        avatarURL: 'https://tylermcginnis.com/would-you-rather/dan.jpg',\n        answers: {\n            \"xj352vofupe1dqz9emx13r\": 'optionOne',\n            \"vthrdm985a262al8qx3do\": 'optionTwo',\n            \"6ni6ok3ym7mf1p33lnez\": 'optionTwo'\n        },\n        questions: ['6ni6ok3ym7mf1p33lnez', 'xj352vofupe1dqz9emx13r'],\n    }\n}\n\nlet questions = {\n    \"8xf0y6ziyjabvozdd253nd\": {\n        id: '8xf0y6ziyjabvozdd253nd',\n        author: 'sarahedo',\n        timestamp: 1467166872634,\n        optionOne: {\n            votes: ['sarahedo'],\n            text: 'have horrible short term memory',\n        },\n        optionTwo: {\n            votes: [],\n            text: 'have horrible long term memory'\n        }\n    },\n    \"6ni6ok3ym7mf1p33lnez\": {\n        id: '6ni6ok3ym7mf1p33lnez',\n        author: 'johndoe',\n        timestamp: 1468479767190,\n        optionOne: {\n            votes: [],\n            text: 'become a superhero',\n        },\n        optionTwo: {\n            votes: ['johndoe', 'sarahedo'],\n            text: 'become a supervillain'\n        }\n    },\n    \"am8ehyc8byjqgar0jgpub9\": {\n        id: 'am8ehyc8byjqgar0jgpub9',\n        author: 'sarahedo',\n        timestamp: 1488579767190,\n        optionOne: {\n            votes: [],\n            text: 'be telekinetic',\n        },\n        optionTwo: {\n            votes: ['sarahedo'],\n            text: 'be telepathic'\n        }\n    },\n    \"loxhs1bqm25b708cmbf3g\": {\n        id: 'loxhs1bqm25b708cmbf3g',\n        author: 'tylermcginnis',\n        timestamp: 1482579767190,\n        optionOne: {\n            votes: [],\n            text: 'be a front-end developer',\n        },\n        optionTwo: {\n            votes: ['sarahedo'],\n            text: 'be a back-end developer'\n        }\n    },\n    \"vthrdm985a262al8qx3do\": {\n        id: 'vthrdm985a262al8qx3do',\n        author: 'tylermcginnis',\n        timestamp: 1489579767190,\n        optionOne: {\n            votes: ['tylermcginnis'],\n            text: 'find $50 yourself',\n        },\n        optionTwo: {\n            votes: ['johndoe'],\n            text: 'have your best friend find $500'\n        }\n    },\n    \"xj352vofupe1dqz9emx13r\": {\n        id: 'xj352vofupe1dqz9emx13r',\n        author: 'johndoe',\n        timestamp: 1493579767190,\n        optionOne: {\n            votes: ['johndoe'],\n            text: 'write JavaScript',\n        },\n        optionTwo: {\n            votes: ['tylermcginnis'],\n            text: 'write Swift'\n        }\n    },\n}\n\nfunction generateUID() {\n    return Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15)\n}\n\nexport function _getUsers() {\n    return new Promise((res, rej) => {\n        setTimeout(() => res({ ...users }), 1000)\n    })\n}\n\nexport function _getQuestions() {\n    return new Promise((res, rej) => {\n        setTimeout(() => res({ ...questions }), 1000)\n    })\n}\n\nexport function formatQuestion({ optionOneText, optionTwoText, author }) {\n\n    return {\n        id: generateUID(),\n        timestamp: Date.now(),\n        author,\n        optionOne: {\n            votes: [],\n            text: optionOneText,\n        },\n        optionTwo: {\n            votes: [],\n            text: optionTwoText,\n        }\n    }\n}\n\nexport function _saveQuestion(question) {\n    return new Promise((res, rej) => {\n        const authedUser = question.author;\n        const formattedQuestion = formatQuestion(question);\n\n        setTimeout(() => {\n            questions = {\n                ...questions,\n                [formattedQuestion.id]: formattedQuestion\n            }\n\n            users = {\n                ...users,\n                [authedUser]: {\n                    ...users[authedUser],\n                    questions: users[authedUser].questions.concat([formattedQuestion.id])\n                }\n            }\n\n            res(formattedQuestion)\n        }, 1000)\n    })\n}\n\nexport function _saveQuestionAnswer({ authedUser, qid, answer }) {\n    return new Promise((res, rej) => {\n        setTimeout(() => {\n            users = {\n                ...users,\n                [authedUser]: {\n                    ...users[authedUser],\n                    answers: {\n                        ...users[authedUser].answers,\n                        [qid]: answer\n                    }\n                }\n            }\n\n            questions = {\n                ...questions,\n                [qid]: {\n                    ...questions[qid],\n                    [answer]: {\n                        ...questions[qid][answer],\n                        votes: questions[qid][answer].votes.concat([authedUser])\n                    }\n                }\n            }\n\n            res()\n        }, 500)\n    })\n}\n","import {\n    _getUsers,\n    _getQuestions,\n    _saveQuestion,\n    _saveQuestionAnswer\n} from './_DATA'\n\nexport function getInitialData() {\n    return Promise.all([\n        _getUsers(),\n        _getQuestions(),\n    ]).then(([users, questions]) => ({\n        users,\n        questions,\n    }))\n}\n\nexport function saveQuestion(question) {\n    return _saveQuestion(question)\n}\n\nexport function saveQuestionAnswer(info) {\n    return _saveQuestionAnswer(info)\n}","export const RECEIVE_USERS = 'GET_USERS'\n\nexport function receiveUsers(users) {\n    return {\n        type: RECEIVE_USERS,\n        users,\n    }\n}","import { saveQuestionAnswer } from '../utils/api'\n\nexport const RECEIVE_QUESTIONS = 'GET_QUESTIONS'\nexport const SAVE_QUESTIONS_ANSWER = 'SAVE_QUESTIONS_ANSWER'\n\nexport function saveAnswer(vote) {\n    return {\n        type: SAVE_QUESTIONS_ANSWER,\n        vote,\n    }\n}\n\nexport function handleSaveAnswer(qid, vote) {\n    return (dispatch, getState) => {\n        const { authedUser } = getState()\n        return saveQuestionAnswer({\n            vote,\n            authedUser,\n            qid,\n        })\n            .then((vote) => dispatch(saveAnswer(vote)))\n    }\n}\n\nexport function receiveQuestions(questions) {\n    return {\n        type: RECEIVE_QUESTIONS,\n        questions\n    }\n}","export const SET_AUTHED_USER = 'SET_AUTHED_USER'\n\nexport function setAuthedUser(id) {\n    return {\n        type: SET_AUTHED_USER,\n        id\n    }\n}","import { getInitialData } from \"../utils/api\";\nimport { receiveUsers } from \"./users\";\nimport { receiveQuestions } from \"./questions\";\nimport { setAuthedUser } from \"./authedUser\";\nimport { showLoading, hideLoading } from 'react-redux-loading'\n\nconst AUTHED_ID = 'sarahedo'\n\nexport function handleInitialData() {\n    return (dispatch) => {\n        dispatch(showLoading())\n        return getInitialData()\n            .then(({ users, questions }) => {\n                dispatch(receiveUsers(users))\n                dispatch(receiveQuestions(questions))\n                dispatch(setAuthedUser(AUTHED_ID))\n                dispatch(hideLoading())\n            })\n    }\n}\n\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { formatQuestion } from '../utils/_DATA'\n\nclass Question extends Component {\n    render() {\n        const { optionOneText, user } = this.props\n        const { text } = optionOneText\n        const questionPreview = text.slice(0, 10) + '...'\n        const { name, avatarURL } = user\n        return (\n            <div className=\"question center\">\n                <div>\n                    <span>{name} asks: </span>\n                </div>\n\n                <div className='question-info'>\n                    <img\n                        src={avatarURL}\n                        alt={`Avatar of ${name}`}\n                        className='avatar'\n                    />\n                    <div>\n                        <h5>Would You Rather</h5>\n                        <p>...{questionPreview}</p>\n                        <button>View Poll</button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps({ authedUser, users, questions }, { id }) {\n    const question = questions[id]\n\n    const optionOneText = question.optionOne\n    const optionTwoText = question.optionTwo\n    const user = users[question.author]\n\n    return {\n        authedUser,\n        optionOneText,\n        user,\n        question: question ?\n            formatQuestion(question, optionOneText, optionTwoText, authedUser)\n            : null\n    }\n}\n\nexport default connect(mapStateToProps)(Question)","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport Question from './Question'\n\nclass Questions extends Component {\n    render() {\n        const { questionList } = this.props\n        return (\n            <div>\n                {questionList.map((id) => (\n                    <div key={id}>\n                        <Question id={id} />\n                    </div>\n                ))}\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps({ authedUser, users, questions }, { type }) {\n    const currentUser = users[authedUser]\n    const answeredQuestions = Object.keys(currentUser.answers)\n    const questionIds = Object.keys(questions).sort((a, b) => questions[b].timestamp - questions[a].timestamp)\n\n    if (type === \"unanswered\") {\n        const spreaded = [...questionIds, ...answeredQuestions];\n        const questionList = spreaded.filter(el => {\n            return !(questionIds.includes(el) && answeredQuestions.includes(el))\n\n        })\n        return {\n            currentUser,\n            questionList\n        }\n\n    } else if (type === \"answered\") {\n        const spreaded = [...answeredQuestions];\n        const questionList = spreaded.filter(el => {\n            return (answeredQuestions.includes(el))\n        })\n        return {\n            currentUser,\n            questionList\n        }\n\n    }\n\n}\n\nexport default connect(mapStateToProps)(Questions)","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport Questions from './Questions'\nimport Tabs from 'react-bootstrap/Tabs'\nimport Tab from 'react-bootstrap/Tab'\n\nclass Dashboard extends Component {\n    render() {\n        return (\n            <div className=\"center\">\n                <h3>Questions</h3>\n                <Tabs\n                    id=\"controlled-tab-example\"\n                    // activeKey={this.key}\n                    // onSelect={ }\n                    className=\"mb-3\"\n                >\n                    <Tab eventKey=\"home\" title=\"Unanswered questions\">\n                        <Questions type=\"unanswered\" />\n                    </Tab>\n                    <Tab eventKey=\"profile\" title=\"Answered Questions\">\n                        <Questions type=\"answered\" />\n                    </Tab>\n                </Tabs>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps({ questions }) {\n    return {\n        questionIds: Object.keys(questions)\n            .sort((a, b) => questions[b].timestamp - questions[a].timestamp)\n    }\n}\n\nexport default connect(mapStateToProps)(Dashboard)","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { formatQuestion } from '../utils/_DATA'\nimport { handleSaveAnswer } from '../actions/questions'\n\nclass QuestionPage extends Component {\n    state = {\n        answer: '',\n        toResults: false\n    }\n\n    onRadioChange = (e) => {\n        const value = e.target.value\n\n        this.setState(() => ({\n            answer: value,\n        }))\n    }\n\n\n    formSubmit = (e) => {\n        e.preventDefault()\n\n        const { answer } = this.state\n        const { dispatch, id, authedUser } = this.props\n\n        dispatch(handleSaveAnswer(answer, id, authedUser))\n\n        this.setState(() => ({\n            answer: '',\n            toResults: id ? false : true,\n        }))\n\n    }\n\n    render() {\n        const { answer, toResults } = this.state\n        const { optionOneText, optionTwoText, user } = this.props\n        const { name, avatarURL } = user\n\n        // if (toResults === true) {\n        //     return <Redirect to='/results' />\n        // }\n\n        return (\n            <div className='question'>\n                <div>\n                    <span>{name} asks: </span>\n                </div>\n\n                <div className='question-info'>\n                    <img\n                        src={avatarURL}\n                        alt={`Avatar of ${name}`}\n                        className='avatar'\n                    />\n                    <div>\n                        <h5>Would You Rather...</h5>\n                        <form className='vote-form' onSubmit={this.formSubmit}>\n                            <div className=\"radio\">\n                                <label>\n                                    <input\n                                        type=\"radio\"\n                                        value={optionOneText}\n                                        checked={answer === optionOneText}\n                                        onChange={this.onRadioChange}\n                                    />\n                                    {optionOneText}\n                                </label>\n                            </div>\n                            <div className=\"radio\">\n                                <label>\n                                    <input\n                                        type=\"radio\"\n                                        value={optionTwoText}\n                                        checked={answer === optionTwoText}\n                                        onChange={this.onRadioChange}\n                                    />\n                                    {optionTwoText}\n                                </label>\n                            </div>\n                            <button\n                                className='btn'\n                                type='submit'\n                            >Submit</button>\n                        </form>\n                    </div>\n                </div>\n            </div >\n        )\n    }\n\n}\n\nfunction mapStateToProps({ authedUser, questions, users }, props) {\n    const { id } = props.match.params\n    const question = questions[id]\n    console.log('this is the question info: ', question)\n    const optionOneText = question.optionOne.text\n    const optionTwoText = question.optionTwo.text\n    const user = users[question.author]\n    console.log('this is the author: ', user)\n    return {\n        id,\n        question,\n        optionOneText,\n        optionTwoText,\n        user,\n        authedUser,\n        question: question ? formatQuestion(optionOneText, optionTwoText, user) : null,\n    }\n}\n\nexport default connect(mapStateToProps)(QuestionPage)\n\n","import React, { Component } from 'react'\n\nclass NewQuestion extends Component {\n    state = {\n        optionOne: '',\n        optionTwo: ''\n    }\n\n    handleChange = (e) => {\n        const value = e.target.value\n\n        this.setState(() => ({\n            ...this.state,\n            [e.target.name]: value\n        }))\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault()\n\n        console.log('Option one: ', this.state.optionOne)\n        console.log('Option two: ', this.state.optionTwo)\n\n        //const { dispatch, id } = this.props\n        //dispatch(handleAddQuestion(this.state.optionOne, id))\n\n        this.setState(() => ({\n            optionOne: '',\n            optionTwo: '',\n        }))\n    }\n\n    render() {\n        const { optionOne, optionTwo } = this.state\n        return (\n            <div>\n                <h3 className='center'>Create New Question</h3>\n                <form className='new-question' onSubmit={this.handleSubmit}>\n                    <p>Would you rather...</p>\n                    <input\n                        placeholder=\"Enter Option One Text Here\"\n                        type='text'\n                        name='optionOne'\n                        value={optionOne}\n                        onChange={this.handleChange}\n                        className='textarea'\n                        maxLength={280}\n                    />\n                    <span>OR</span>\n                    <input\n                        placeholder=\"Enter Option Two Text Here\"\n                        type='text'\n                        name='optionTwo'\n                        value={optionTwo}\n                        onChange={this.handleChange}\n                        className='textarea'\n                        maxLength={280}\n                    />\n                    <button\n                        className='btn'\n                        type='submit'\n                    // disabled={text === ''}\n                    >\n                        Submit\n                    </button>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default NewQuestion","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nclass Results extends Component {\n    render() {\n        return (\n            <div>\n                <h3>Results</h3>\n            </div>\n        )\n    }\n}\n\nexport default connect()(Results)","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { handleInitialData } from '../actions/shared'\nimport Dashboard from './Dashboard'\nimport LoadingBar from 'react-redux-loading'\nimport QuestionPage from './QuestionPage'\nimport NewQuestion from './NewQuestion'\nimport Results from './Results'\n\nclass App extends Component {\n  componentDidMount() {\n    const { dispatch } = this.props\n    dispatch(handleInitialData())\n  }\n\n  render() {\n    return (\n      <div>\n        <LoadingBar />\n        {this.props.loading === true\n          ? null :\n          //<QuestionPage match={{ params: { id: '8xf0y6ziyjabvozdd253nd' } }} />\n          //<NewQuestion />\n          <Dashboard />\n          //<Results />\n        }\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps({ authedUser }) {\n  return {\n    loading: authedUser === null\n  }\n}\n\nexport default connect(mapStateToProps)(App);\n","import { combineReducers } from \"redux\";\nimport users from \"./users\";\nimport questions from \"./questions\";\nimport authedUser from \"./authedUser\";\nimport { loadingBarReducer } from \"react-redux-loading\";\n\nexport default combineReducers({\n    authedUser,\n    users,\n    questions,\n    loadingBar: loadingBarReducer,\n})","import { SET_AUTHED_USER } from '../actions/authedUser'\n\nexport default function authedUser(state = null, action) {\n    switch (action.type) {\n        case SET_AUTHED_USER:\n            return action.id\n        default:\n            return state\n    }\n}","import { RECEIVE_USERS } from '../actions/users'\n\nexport default function users(state = {}, action) {\n    switch (action.type) {\n        case RECEIVE_USERS:\n            return {\n                ...state,\n                ...action.users\n            }\n        default:\n            return state\n    }\n}","import { RECEIVE_QUESTIONS, SAVE_QUESTIONS_ANSWER } from '../actions/questions'\n\nexport default function questions(state = {}, action) {\n    switch (action.type) {\n        case RECEIVE_QUESTIONS:\n            return {\n                ...state,\n                ...action.questions\n            }\n        case SAVE_QUESTIONS_ANSWER:\n            return {\n                ...state,\n                [action.questions.id.votes]: action.vote\n            }\n        default:\n            return state\n    }\n}","const logger = (store) => (next) => (action) => {\n    console.group(action.type)\n    console.log('The action is: ', action)\n    const returnValue = next(action)\n    console.log('The new state is: ', store.getState())\n    console.groupEnd()\n    return returnValue\n}\n\nexport default logger","import thunk from 'redux-thunk'\nimport logger from './logger'\nimport { applyMiddleware } from 'redux'\n\nexport default applyMiddleware(\n    thunk,\n    logger\n)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport reducer from './reducers'\nimport middleware from './middleware'\n\nconst store = createStore(reducer, middleware)\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n  ,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}
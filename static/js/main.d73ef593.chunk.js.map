{"version":3,"sources":["utils/_DATA.js","utils/api.js","actions/users.js","actions/questions.js","actions/authedUser.js","actions/shared.js","components/Question.js","components/Questions.js","components/Dashboard.js","components/QuestionPage.js","components/NewQuestion.js","components/Results.js","components/App.js","reducers/index.js","reducers/authedUser.js","reducers/users.js","reducers/questions.js","middleware/logger.js","middleware/index.js","index.js"],"names":["users","sarahedo","id","name","avatarURL","answers","questions","tylermcginnis","johndoe","author","timestamp","optionOne","votes","text","optionTwo","formatQuestion","optionOneText","optionTwoText","Math","random","toString","substring","Date","now","saveQuestion","question","Promise","res","rej","authedUser","formattedQuestion","setTimeout","console","log","concat","_saveQuestion","saveQuestionAnswer","info","qid","answer","_saveQuestionAnswer","RECEIVE_USERS","RECEIVE_QUESTIONS","ADD_QUESTION","SAVE_QUESTIONS_ANSWER","handleAddQuestion","dispatch","getState","then","type","addQuestion","handleSaveAnswer","saveAnswer","SET_AUTHED_USER","handleInitialData","showLoading","all","receiveUsers","receiveQuestions","hideLoading","Question","this","props","user","questionPreview","slice","className","src","alt","Component","connect","Questions","questionList","map","currentUser","answeredQuestions","Object","keys","questionIds","sort","a","b","filter","el","includes","Dashboard","Tabs","Tab","eventKey","title","QuestionPage","state","toResults","onRadioChange","e","value","target","setState","formSubmit","preventDefault","onSubmit","checked","onChange","match","params","NewQuestion","handleChange","handleSubmit","placeholder","maxLength","Results","optionOneVotes","optionTwoVotes","totalCount","length","yourVoteForOptOne","reduce","vote","yourVoteForOptTwo","optionOneVotesRes","percentage","optionTwoVotesRes","style","width","votesCount","totalVotes","floor","App","loading","combineReducers","action","loadingBar","loadingBarReducer","logger","store","next","group","returnValue","groupEnd","applyMiddleware","thunk","createStore","reducer","middleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d73ef593.chunk.js","sourcesContent":["let users = {\n    sarahedo: {\n        id: 'sarahedo',\n        name: 'Sarah Edo',\n        avatarURL: 'https://tylermcginnis.com/would-you-rather/sarah.jpg',\n        answers: {\n            \"8xf0y6ziyjabvozdd253nd\": 'optionOne',\n            \"6ni6ok3ym7mf1p33lnez\": 'optionTwo',\n            \"am8ehyc8byjqgar0jgpub9\": 'optionTwo',\n            \"loxhs1bqm25b708cmbf3g\": 'optionTwo'\n        },\n        questions: ['8xf0y6ziyjabvozdd253nd', 'am8ehyc8byjqgar0jgpub9']\n    },\n    tylermcginnis: {\n        id: 'tylermcginnis',\n        name: 'Tyler McGinnis',\n        avatarURL: 'https://tylermcginnis.com/would-you-rather/tyler.jpg',\n        answers: {\n            \"vthrdm985a262al8qx3do\": 'optionOne',\n            \"xj352vofupe1dqz9emx13r\": 'optionTwo',\n        },\n        questions: ['loxhs1bqm25b708cmbf3g', 'vthrdm985a262al8qx3do'],\n    },\n    johndoe: {\n        id: 'johndoe',\n        name: 'John Doe',\n        avatarURL: 'https://tylermcginnis.com/would-you-rather/dan.jpg',\n        answers: {\n            \"xj352vofupe1dqz9emx13r\": 'optionOne',\n            \"vthrdm985a262al8qx3do\": 'optionTwo',\n            \"6ni6ok3ym7mf1p33lnez\": 'optionTwo'\n        },\n        questions: ['6ni6ok3ym7mf1p33lnez', 'xj352vofupe1dqz9emx13r'],\n    }\n}\n\nlet questions = {\n    \"8xf0y6ziyjabvozdd253nd\": {\n        id: '8xf0y6ziyjabvozdd253nd',\n        author: 'sarahedo',\n        timestamp: 1467166872634,\n        optionOne: {\n            votes: ['sarahedo'],\n            text: 'have horrible short term memory',\n        },\n        optionTwo: {\n            votes: [],\n            text: 'have horrible long term memory'\n        }\n    },\n    \"6ni6ok3ym7mf1p33lnez\": {\n        id: '6ni6ok3ym7mf1p33lnez',\n        author: 'johndoe',\n        timestamp: 1468479767190,\n        optionOne: {\n            votes: [],\n            text: 'become a superhero',\n        },\n        optionTwo: {\n            votes: ['johndoe', 'sarahedo'],\n            text: 'become a supervillain'\n        }\n    },\n    \"am8ehyc8byjqgar0jgpub9\": {\n        id: 'am8ehyc8byjqgar0jgpub9',\n        author: 'sarahedo',\n        timestamp: 1488579767190,\n        optionOne: {\n            votes: [],\n            text: 'be telekinetic',\n        },\n        optionTwo: {\n            votes: ['sarahedo'],\n            text: 'be telepathic'\n        }\n    },\n    \"loxhs1bqm25b708cmbf3g\": {\n        id: 'loxhs1bqm25b708cmbf3g',\n        author: 'tylermcginnis',\n        timestamp: 1482579767190,\n        optionOne: {\n            votes: [],\n            text: 'be a front-end developer',\n        },\n        optionTwo: {\n            votes: ['sarahedo'],\n            text: 'be a back-end developer'\n        }\n    },\n    \"vthrdm985a262al8qx3do\": {\n        id: 'vthrdm985a262al8qx3do',\n        author: 'tylermcginnis',\n        timestamp: 1489579767190,\n        optionOne: {\n            votes: ['tylermcginnis'],\n            text: 'find $50 yourself',\n        },\n        optionTwo: {\n            votes: ['johndoe'],\n            text: 'have your best friend find $500'\n        }\n    },\n    \"xj352vofupe1dqz9emx13r\": {\n        id: 'xj352vofupe1dqz9emx13r',\n        author: 'johndoe',\n        timestamp: 1493579767190,\n        optionOne: {\n            votes: ['johndoe'],\n            text: 'write JavaScript',\n        },\n        optionTwo: {\n            votes: ['tylermcginnis'],\n            text: 'write Swift'\n        }\n    },\n}\n\nfunction generateUID() {\n    return Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15)\n}\n\nexport function _getUsers() {\n    return new Promise((res, rej) => {\n        setTimeout(() => res({ ...users }), 1000)\n    })\n}\n\nexport function _getQuestions() {\n    return new Promise((res, rej) => {\n        setTimeout(() => res({ ...questions }), 1000)\n    })\n}\n\nexport function formatQuestion({ optionOneText, optionTwoText, author }) {\n\n    return {\n        id: generateUID(),\n        timestamp: Date.now(),\n        author,\n        optionOne: {\n            votes: [],\n            text: optionOneText,\n        },\n        optionTwo: {\n            votes: [],\n            text: optionTwoText,\n        }\n    }\n}\n\nexport function _saveQuestion(question) {\n    return new Promise((res, rej) => {\n        const authedUser = question.author;\n        const formattedQuestion = formatQuestion(question);\n\n        setTimeout(() => {\n            questions = {\n                ...questions,\n                [formattedQuestion.id]: formattedQuestion\n            }\n            console.log('user from api', users, authedUser)\n            users = {\n                ...users,\n                [authedUser]: {\n                    ...users[authedUser],\n                    questions: users[authedUser].questions.concat([formattedQuestion.id])\n                }\n            }\n\n            res(formattedQuestion)\n        }, 1000)\n    })\n}\n\nexport function _saveQuestionAnswer({ authedUser, qid, answer }) {\n    return new Promise((res, rej) => {\n        setTimeout(() => {\n            users = {\n                ...users,\n                [authedUser]: {\n                    ...users[authedUser],\n                    answers: {\n                        ...users[authedUser].answers,\n                        [qid]: answer\n                    }\n                }\n            }\n\n            questions = {\n                ...questions,\n                [qid]: {\n                    ...questions[qid],\n                    [answer]: {\n                        ...questions[qid][answer],\n                        votes: questions[qid][answer].votes.concat([authedUser])\n                    }\n                }\n            }\n\n            res()\n        }, 500)\n    })\n}\n","import {\n    _getUsers,\n    _getQuestions,\n    _saveQuestion,\n    _saveQuestionAnswer\n} from './_DATA'\n\nexport function getInitialData() {\n    return Promise.all([\n        _getUsers(),\n        _getQuestions(),\n    ]).then(([users, questions]) => ({\n        users,\n        questions,\n    }))\n}\n\nexport function saveQuestion(question) {\n    return _saveQuestion(question)\n}\n\nexport function saveQuestionAnswer(info) {\n    return _saveQuestionAnswer(info)\n}","export const RECEIVE_USERS = 'GET_USERS'\n\nexport function receiveUsers(users) {\n    return {\n        type: RECEIVE_USERS,\n        users,\n    }\n}","import { saveQuestionAnswer, saveQuestion } from '../utils/api'\n\nexport const RECEIVE_QUESTIONS = 'GET_QUESTIONS'\nexport const ADD_QUESTION = 'ADD_QUESTION'\nexport const SAVE_QUESTIONS_ANSWER = 'SAVE_QUESTIONS_ANSWER'\n\nexport function receiveQuestions(questions) {\n    return {\n        type: RECEIVE_QUESTIONS,\n        questions\n    }\n}\n\nexport function addQuestion(question) {\n    return {\n        type: ADD_QUESTION,\n        question\n    }\n}\n\nexport function handleAddQuestion(optionOneText, optionTwoText) {\n    return (dispatch, getState) => {\n        const authedUser = getState()\n        console.log('USER:', authedUser)\n        return saveQuestion({\n            optionOneText,\n            optionTwoText,\n            author: authedUser.authedUser,\n        })\n            .then((question) => dispatch(addQuestion(question)))\n    }\n}\n\nexport function saveAnswer(answer) {\n    return {\n        type: SAVE_QUESTIONS_ANSWER,\n        answer,\n    }\n}\n\nexport function handleSaveAnswer(qid, answer) {\n    return (dispatch, getState) => {\n        const { authedUser } = getState()\n        return saveQuestionAnswer({\n            answer,\n            authedUser,\n            qid,\n        })\n            .then((answer) => dispatch(saveAnswer(answer)))\n    }\n}\n\n","export const SET_AUTHED_USER = 'SET_AUTHED_USER'\n\nexport function setAuthedUser(id) {\n    return {\n        type: SET_AUTHED_USER,\n        id\n    }\n}","import { getInitialData } from \"../utils/api\";\nimport { receiveUsers } from \"./users\";\nimport { receiveQuestions } from \"./questions\";\nimport { setAuthedUser } from \"./authedUser\";\nimport { showLoading, hideLoading } from \"react-redux-loading\";\n\nconst AUTHED_ID = \"johndoe\";\n\nexport function handleInitialData() {\n  return (dispatch) => {\n    dispatch(showLoading());\n    return getInitialData().then(({ users, questions }) => {\n      dispatch(receiveUsers(users));\n      dispatch(receiveQuestions(questions));\n      dispatch(setAuthedUser(AUTHED_ID));\n      dispatch(hideLoading());\n    });\n  };\n}\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { formatQuestion } from '../utils/_DATA'\n\nclass Question extends Component {\n    render() {\n        const { optionOneText, user } = this.props\n        const { text } = optionOneText\n        const questionPreview = text.slice(0, 10) + '...'\n        const { name, avatarURL } = user\n        return (\n            <div className=\"question center\">\n                <div>\n                    <span>{name} asks: </span>\n                </div>\n\n                <div className='question-info'>\n                    <img\n                        src={avatarURL}\n                        alt={`Avatar of ${name}`}\n                        className='avatar'\n                    />\n                    <div>\n                        <h5>Would You Rather</h5>\n                        <p>...{questionPreview}</p>\n                        <button>View Poll</button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps({ authedUser, users, questions }, { id }) {\n    const question = questions[id]\n\n    const optionOneText = question.optionOne\n    const optionTwoText = question.optionTwo\n    const user = users[question.author]\n\n    return {\n        authedUser,\n        optionOneText,\n        user,\n        question: question ?\n            formatQuestion(question, optionOneText, optionTwoText, authedUser)\n            : null\n    }\n}\n\nexport default connect(mapStateToProps)(Question)","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport Question from './Question'\n\nclass Questions extends Component {\n    render() {\n        const { questionList } = this.props\n        return (\n            <div>\n                {questionList.map((id) => (\n                    <div key={id}>\n                        <Question id={id} />\n                    </div>\n                ))}\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps({ authedUser, users, questions }, { type }) {\n    const currentUser = users[authedUser]\n    const answeredQuestions = Object.keys(currentUser.answers)\n    const questionIds = Object.keys(questions).sort((a, b) => questions[b].timestamp - questions[a].timestamp)\n\n    if (type === \"unanswered\") {\n        const spreaded = [...questionIds, ...answeredQuestions];\n        const questionList = spreaded.filter(el => {\n            return !(questionIds.includes(el) && answeredQuestions.includes(el))\n\n        })\n        return {\n            currentUser,\n            questionList\n        }\n\n    } else if (type === \"answered\") {\n        const spreaded = [...answeredQuestions];\n        const questionList = spreaded.filter(el => {\n            return (answeredQuestions.includes(el))\n        })\n        return {\n            currentUser,\n            questionList\n        }\n\n    }\n\n}\n\nexport default connect(mapStateToProps)(Questions)","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport Questions from './Questions'\nimport Tabs from 'react-bootstrap/Tabs'\nimport Tab from 'react-bootstrap/Tab'\n\nclass Dashboard extends Component {\n    render() {\n        return (\n            <div className=\"center\">\n                <h3>Questions</h3>\n                <Tabs\n                    id=\"controlled-tab-example\"\n                    // activeKey={this.key}\n                    // onSelect={ }\n                    className=\"mb-3\"\n                >\n                    <Tab eventKey=\"home\" title=\"Unanswered questions\">\n                        <Questions type=\"unanswered\" />\n                    </Tab>\n                    <Tab eventKey=\"profile\" title=\"Answered Questions\">\n                        <Questions type=\"answered\" />\n                    </Tab>\n                </Tabs>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps({ questions }) {\n    return {\n        questionIds: Object.keys(questions)\n            .sort((a, b) => questions[b].timestamp - questions[a].timestamp)\n    }\n}\n\nexport default connect(mapStateToProps)(Dashboard)","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { formatQuestion } from '../utils/_DATA'\nimport { handleSaveAnswer } from '../actions/questions'\n\nclass QuestionPage extends Component {\n    state = {\n        answer: '',\n        toResults: false\n    }\n\n    onRadioChange = (e) => {\n        const value = e.target.value\n\n        this.setState(() => ({\n            answer: value,\n        }))\n    }\n\n\n    formSubmit = (e) => {\n        e.preventDefault()\n\n        const { answer } = this.state\n        const { dispatch, id, authedUser } = this.props\n\n        dispatch(handleSaveAnswer(answer, id, authedUser))\n\n        this.setState(() => ({\n            answer: '',\n            toResults: id ? false : true,\n        }))\n\n    }\n\n    render() {\n        const { answer, toResults } = this.state\n        const { optionOneText, optionTwoText, user } = this.props\n        const { name, avatarURL } = user\n\n        // if (toResults === true) {\n        //     return <Redirect to='/results' />\n        // }\n\n        return (\n            <div className='question'>\n                <div>\n                    <span>{name} asks: </span>\n                </div>\n\n                <div className='question-info'>\n                    <img\n                        src={avatarURL}\n                        alt={`Avatar of ${name}`}\n                        className='avatar'\n                    />\n                    <div>\n                        <h5>Would You Rather...</h5>\n                        <form className='vote-form' onSubmit={this.formSubmit}>\n                            <div className=\"radio\">\n                                <label>\n                                    <input\n                                        type=\"radio\"\n                                        value={optionOneText}\n                                        checked={answer === optionOneText}\n                                        onChange={this.onRadioChange}\n                                    />\n                                    {optionOneText}\n                                </label>\n                            </div>\n                            <div className=\"radio\">\n                                <label>\n                                    <input\n                                        type=\"radio\"\n                                        value={optionTwoText}\n                                        checked={answer === optionTwoText}\n                                        onChange={this.onRadioChange}\n                                    />\n                                    {optionTwoText}\n                                </label>\n                            </div>\n                            <button\n                                className='btn'\n                                type='submit'\n                            >Submit</button>\n                        </form>\n                    </div>\n                </div>\n            </div >\n        )\n    }\n\n}\n\nfunction mapStateToProps({ authedUser, questions, users }, props) {\n    const { id } = props.match.params\n    const question = questions[id]\n    console.log('this is the question info: ', question)\n    const optionOneText = question.optionOne.text\n    const optionTwoText = question.optionTwo.text\n    const user = users[question.author]\n    console.log('this is the author: ', user)\n    return {\n        id,\n        question,\n        optionOneText,\n        optionTwoText,\n        user,\n        authedUser,\n        question: question ? formatQuestion(optionOneText, optionTwoText, user) : null,\n    }\n}\n\nexport default connect(mapStateToProps)(QuestionPage)\n\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { handleAddQuestion } from '../actions/questions'\n\nclass NewQuestion extends Component {\n    state = {\n        optionOne: '',\n        optionTwo: ''\n    }\n\n    handleChange = (e) => {\n        const value = e.target.value\n\n        this.setState(() => ({\n            ...this.state,\n            [e.target.name]: value\n        }))\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault()\n\n        console.log('Option one: ', this.state.optionOne)\n        console.log('Option two: ', this.state.optionTwo)\n\n        const { dispatch } = this.props\n        dispatch(handleAddQuestion(this.state.optionOne, this.state.optionTwo))\n\n        this.setState(() => ({\n            optionOne: '',\n            optionTwo: '',\n        }))\n    }\n\n    render() {\n        const { optionOne, optionTwo } = this.state\n        return (\n            <div>\n                <h3 className='center'>Create New Question</h3>\n                <form className='new-question' onSubmit={this.handleSubmit}>\n                    <p>Would you rather...</p>\n                    <input\n                        placeholder=\"Enter Option One Text Here\"\n                        type='text'\n                        name='optionOne'\n                        value={optionOne}\n                        onChange={this.handleChange}\n                        className='textarea'\n                        maxLength={280}\n                    />\n                    <span>OR</span>\n                    <input\n                        placeholder=\"Enter Option Two Text Here\"\n                        type='text'\n                        name='optionTwo'\n                        value={optionTwo}\n                        onChange={this.handleChange}\n                        className='textarea'\n                        maxLength={280}\n                    />\n                    <button\n                        className='btn'\n                        type='submit'\n                    // disabled={text === ''}\n                    >\n                        Submit\n                    </button>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default connect()(NewQuestion)","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { formatQuestion } from \"../utils/_DATA\";\n\nclass Results extends Component {\n  render() {\n    const {\n      optionOneText,\n      optionTwoText,\n      optionOneVotes,\n      optionTwoVotes,\n      user,\n      users,\n      question,\n      authedUser,\n    } = this.props;\n    const totalCount = Object.keys(users).length;\n\n    const yourVoteForOptOne = optionOneVotes.reduce((vote) => vote);\n    const yourVoteForOptTwo = optionTwoVotes.reduce((vote) => vote);\n\n    const optionOneVotesRes = percentage(optionOneVotes.length, totalCount);\n    const optionTwoVotesRes = percentage(optionTwoVotes.length, totalCount);\n    const { name, id } = user;\n    return (\n      <div className=\"question\">\n        <div>\n          <span>Asked by {name}</span>\n        </div>\n        <h3>Results:</h3>\n        <div className=\"chart\">\n          <span\n            className={yourVoteForOptOne === authedUser ? \"your-vote\" : \"none\"}\n          >\n            Your <br />\n            Vote\n          </span>\n          <h3>Would you rather {optionOneText}?</h3>\n          <div>\n            <div id=\"option-1\" className=\"option\">\n              <div className=\"results\">\n                <div className=\"on\" style={{ width: `${optionOneVotesRes}%` }}>\n                  <span className=\"count\">\n                    <p>{`${optionOneVotesRes}%`}</p>\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <p>{`${optionOneVotes.length} out of ${totalCount} votes`}</p>\n        </div>\n\n        <div className=\"chart\">\n          <span\n            className={\n              yourVoteForOptTwo === authedUser ? \"your-vote optTwo\" : \"none\"\n            }\n          >\n            Your <br />\n            Vote\n          </span>\n          <h3>Would you rather {optionTwoText}?</h3>\n          <div>\n            <div id=\"option-2\" className=\"option\">\n              <div className=\"results\">\n                <div className=\"on\" style={{ width: `${optionTwoVotesRes}%` }}>\n                  <span className=\"count\">\n                    <p>{`${optionTwoVotesRes}%`}</p>\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n          <p>{`${optionTwoVotes.length} out of ${totalCount} votes`}</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps({ authedUser, questions, users }, props) {\n  const { id } = props.match.params;\n  const question = questions[id];\n  console.log(\"this is the question info: \", question);\n  const optionOneText = question.optionOne.text;\n  const optionTwoText = question.optionTwo.text;\n  const optionOneVotes = question.optionOne.votes;\n  const optionTwoVotes = question.optionTwo.votes;\n  const user = users[question.author];\n  console.log(\"This is user info\", user.id);\n  return {\n    authedUser,\n    question,\n    optionOneText,\n    optionTwoText,\n    optionOneVotes,\n    optionTwoVotes,\n    user,\n    users,\n    question: question\n      ? formatQuestion(optionOneText, optionTwoText, user)\n      : null,\n  };\n}\n\nfunction percentage(votesCount, totalVotes) {\n  return Math.floor((100 * votesCount) / totalVotes);\n}\n\nexport default connect(mapStateToProps)(Results);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { handleInitialData } from \"../actions/shared\";\nimport Dashboard from \"./Dashboard\";\nimport LoadingBar from \"react-redux-loading\";\nimport QuestionPage from \"./QuestionPage\";\nimport NewQuestion from \"./NewQuestion\";\nimport Results from \"./Results\";\n\nclass App extends Component {\n  componentDidMount() {\n    const { dispatch } = this.props;\n    dispatch(handleInitialData());\n  }\n\n  render() {\n    return (\n      <div>\n        <LoadingBar />\n        {this.props.loading === true ? null : (\n          //<QuestionPage match={{ params: { id: '8xf0y6ziyjabvozdd253nd' } }} />\n          //<NewQuestion />\n          //<Dashboard />\n          <Results match={{ params: { id: \"vthrdm985a262al8qx3do\" } }} />\n        )}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps({ authedUser }) {\n  return {\n    loading: authedUser === null,\n  };\n}\n\nexport default connect(mapStateToProps)(App);\n","import { combineReducers } from \"redux\";\nimport users from \"./users\";\nimport questions from \"./questions\";\nimport authedUser from \"./authedUser\";\nimport { loadingBarReducer } from \"react-redux-loading\";\n\nexport default combineReducers({\n    authedUser,\n    users,\n    questions,\n    loadingBar: loadingBarReducer,\n})","import { SET_AUTHED_USER } from '../actions/authedUser'\n\nexport default function authedUser(state = null, action) {\n    switch (action.type) {\n        case SET_AUTHED_USER:\n            return action.id\n        default:\n            return state\n    }\n}","import { RECEIVE_USERS } from '../actions/users'\n\nexport default function users(state = {}, action) {\n    switch (action.type) {\n        case RECEIVE_USERS:\n            return {\n                ...state,\n                ...action.users\n            }\n        default:\n            return state\n    }\n}","import { RECEIVE_QUESTIONS, SAVE_QUESTIONS_ANSWER, ADD_QUESTION } from '../actions/questions'\n\nexport default function questions(state = {}, action) {\n    switch (action.type) {\n        case RECEIVE_QUESTIONS:\n            return {\n                ...state,\n                ...action.questions\n            }\n        case ADD_QUESTION:\n            return {\n                ...state,\n                [action.question.id]: action.question\n            }\n        case SAVE_QUESTIONS_ANSWER:\n            return {\n                ...state,\n                [action.questions.id.answer]: action.answer\n            }\n        default:\n            return state\n    }\n}","const logger = (store) => (next) => (action) => {\n    console.group(action.type)\n    console.log('The action is: ', action)\n    const returnValue = next(action)\n    console.log('The new state is: ', store.getState())\n    console.groupEnd()\n    return returnValue\n}\n\nexport default logger","import thunk from 'redux-thunk'\nimport logger from './logger'\nimport { applyMiddleware } from 'redux'\n\nexport default applyMiddleware(\n    thunk,\n    logger\n)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport reducer from './reducers'\nimport middleware from './middleware'\n\nconst store = createStore(reducer, middleware)\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n  ,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}
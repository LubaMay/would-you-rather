{"version":3,"sources":["utils/_DATA.js","utils/api.js","actions/users.js","actions/questions.js","actions/authedUser.js","actions/shared.js","components/Question.js","components/Questions.js","components/Dashboard.js","components/NewQuestion.js","components/Leaderboard.js","components/Nav.js","components/App.js","reducers/index.js","reducers/authedUser.js","reducers/users.js","reducers/questions.js","middleware/logger.js","middleware/index.js","index.js"],"names":["users","sarahedo","id","name","avatarURL","answers","am8ehyc8byjqgar0jgpub9","loxhs1bqm25b708cmbf3g","questions","tylermcginnis","vthrdm985a262al8qx3do","xj352vofupe1dqz9emx13r","johndoe","author","timestamp","optionOne","votes","text","optionTwo","formatQuestion","optionOneText","optionTwoText","Math","random","toString","substring","Date","now","saveQuestion","question","Promise","res","rej","authedUser","formattedQuestion","setTimeout","console","log","concat","_saveQuestion","RECEIVE_USERS","RECEIVE_QUESTIONS","ADD_QUESTION","SAVE_QUESTIONS_ANSWER","handleAddQuestion","dispatch","getState","then","type","addQuestion","SET_AUTHED_USER","handleInitialData","showLoading","all","receiveUsers","receiveQuestions","hideLoading","Question","this","props","user","questionPreview","slice","className","src","alt","Component","connect","Questions","questionList","map","currentUser","answeredQuestions","Object","keys","questionIds","sort","a","b","filter","el","includes","Dashboard","Tabs","Tab","eventKey","title","NewQuestion","state","handleChange","e","value","target","setState","handleSubmit","preventDefault","onSubmit","placeholder","onChange","maxLength","Leaderboard","usersList","answeredQs","length","createdQs","score","values","Nav","to","exact","activeClassName","App","loading","path","component","combineReducers","action","answer","loadingBar","loadingBarReducer","logger","store","next","group","returnValue","groupEnd","applyMiddleware","thunk","createStore","reducer","middleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ba5e0778.chunk.js","sourcesContent":["let users = {\n  sarahedo: {\n    id: \"sarahedo\",\n    name: \"Sarah Edo\",\n    avatarURL:\n      \"https://s3.amazonaws.com/cms-assets.tutsplus.com/uploads/users/107/profiles/2394/profileImage/avatar-new400.jpg\",\n    answers: {\n      \"8xf0y6ziyjabvozdd253nd\": \"optionOne\",\n      \"6ni6ok3ym7mf1p33lnez\": \"optionTwo\",\n      am8ehyc8byjqgar0jgpub9: \"optionTwo\",\n      loxhs1bqm25b708cmbf3g: \"optionTwo\",\n    },\n    questions: [\"8xf0y6ziyjabvozdd253nd\", \"am8ehyc8byjqgar0jgpub9\"],\n  },\n  tylermcginnis: {\n    id: \"tylermcginnis\",\n    name: \"Tyler McGinnis\",\n    avatarURL:\n      \"https://external-preview.redd.it/8v3LkYRXddBkoqJkH_0OixpKyqcEOKqokxpDzAc2JYI.jpg?auto=webp&s=7348fcc4defdcfb5ca82553fcca8184061147d54\",\n    answers: {\n      vthrdm985a262al8qx3do: \"optionOne\",\n      xj352vofupe1dqz9emx13r: \"optionTwo\",\n    },\n    questions: [\"loxhs1bqm25b708cmbf3g\", \"vthrdm985a262al8qx3do\"],\n  },\n  johndoe: {\n    id: \"johndoe\",\n    name: \"John Doe\",\n    avatarURL: \"https://miro.medium.com/max/566/1*n-FPAObgPCDmxNKeGqyWvw.jpeg\",\n    answers: {\n      xj352vofupe1dqz9emx13r: \"optionOne\",\n      vthrdm985a262al8qx3do: \"optionTwo\",\n      \"6ni6ok3ym7mf1p33lnez\": \"optionTwo\",\n    },\n    questions: [\"6ni6ok3ym7mf1p33lnez\", \"xj352vofupe1dqz9emx13r\"],\n  },\n};\n\nlet questions = {\n  \"8xf0y6ziyjabvozdd253nd\": {\n    id: \"8xf0y6ziyjabvozdd253nd\",\n    author: \"sarahedo\",\n    timestamp: 1467166872634,\n    optionOne: {\n      votes: [\"sarahedo\"],\n      text: \"have horrible short term memory\",\n    },\n    optionTwo: {\n      votes: [],\n      text: \"have horrible long term memory\",\n    },\n  },\n  \"6ni6ok3ym7mf1p33lnez\": {\n    id: \"6ni6ok3ym7mf1p33lnez\",\n    author: \"johndoe\",\n    timestamp: 1468479767190,\n    optionOne: {\n      votes: [],\n      text: \"become a superhero\",\n    },\n    optionTwo: {\n      votes: [\"johndoe\", \"sarahedo\"],\n      text: \"become a supervillain\",\n    },\n  },\n  am8ehyc8byjqgar0jgpub9: {\n    id: \"am8ehyc8byjqgar0jgpub9\",\n    author: \"sarahedo\",\n    timestamp: 1488579767190,\n    optionOne: {\n      votes: [],\n      text: \"be telekinetic\",\n    },\n    optionTwo: {\n      votes: [\"sarahedo\"],\n      text: \"be telepathic\",\n    },\n  },\n  loxhs1bqm25b708cmbf3g: {\n    id: \"loxhs1bqm25b708cmbf3g\",\n    author: \"tylermcginnis\",\n    timestamp: 1482579767190,\n    optionOne: {\n      votes: [],\n      text: \"be a front-end developer\",\n    },\n    optionTwo: {\n      votes: [\"sarahedo\"],\n      text: \"be a back-end developer\",\n    },\n  },\n  vthrdm985a262al8qx3do: {\n    id: \"vthrdm985a262al8qx3do\",\n    author: \"tylermcginnis\",\n    timestamp: 1489579767190,\n    optionOne: {\n      votes: [\"tylermcginnis\"],\n      text: \"find $50 yourself\",\n    },\n    optionTwo: {\n      votes: [\"johndoe\"],\n      text: \"have your best friend find $500\",\n    },\n  },\n  xj352vofupe1dqz9emx13r: {\n    id: \"xj352vofupe1dqz9emx13r\",\n    author: \"johndoe\",\n    timestamp: 1493579767190,\n    optionOne: {\n      votes: [\"johndoe\"],\n      text: \"write JavaScript\",\n    },\n    optionTwo: {\n      votes: [\"tylermcginnis\"],\n      text: \"write Swift\",\n    },\n  },\n};\n\nfunction generateUID() {\n  return (\n    Math.random().toString(36).substring(2, 15) +\n    Math.random().toString(36).substring(2, 15)\n  );\n}\n\nexport function _getUsers() {\n  return new Promise((res, rej) => {\n    setTimeout(() => res({ ...users }), 1000);\n  });\n}\n\nexport function _getQuestions() {\n  return new Promise((res, rej) => {\n    setTimeout(() => res({ ...questions }), 1000);\n  });\n}\n\nexport function formatQuestion({ optionOneText, optionTwoText, author }) {\n  return {\n    id: generateUID(),\n    timestamp: Date.now(),\n    author,\n    optionOne: {\n      votes: [],\n      text: optionOneText,\n    },\n    optionTwo: {\n      votes: [],\n      text: optionTwoText,\n    },\n  };\n}\n\nexport function _saveQuestion(question) {\n  return new Promise((res, rej) => {\n    const authedUser = question.author;\n    const formattedQuestion = formatQuestion(question);\n\n    setTimeout(() => {\n      questions = {\n        ...questions,\n        [formattedQuestion.id]: formattedQuestion,\n      };\n      console.log(\"user from api\", users, authedUser);\n      users = {\n        ...users,\n        [authedUser]: {\n          ...users[authedUser],\n          questions: users[authedUser].questions.concat([formattedQuestion.id]),\n        },\n      };\n\n      res(formattedQuestion);\n    }, 1000);\n  });\n}\n\nexport function _saveQuestionAnswer({ authedUser, qid, answer }) {\n  return new Promise((res, rej) => {\n    setTimeout(() => {\n      users = {\n        ...users,\n        [authedUser]: {\n          ...users[authedUser],\n          answers: {\n            ...users[authedUser].answers,\n            [qid]: answer,\n          },\n        },\n      };\n\n      questions = {\n        ...questions,\n        [qid]: {\n          ...questions[qid],\n          [answer]: {\n            ...questions[qid][answer],\n            votes: questions[qid][answer].votes.concat([authedUser]),\n          },\n        },\n      };\n\n      res();\n    }, 500);\n  });\n}\n","import {\n    _getUsers,\n    _getQuestions,\n    _saveQuestion,\n    _saveQuestionAnswer\n} from './_DATA'\n\nexport function getInitialData() {\n    return Promise.all([\n        _getUsers(),\n        _getQuestions(),\n    ]).then(([users, questions]) => ({\n        users,\n        questions,\n    }))\n}\n\nexport function saveQuestion(question) {\n    return _saveQuestion(question)\n}\n\nexport function saveQuestionAnswer(info) {\n    return _saveQuestionAnswer(info)\n}","export const RECEIVE_USERS = 'GET_USERS'\n\nexport function receiveUsers(users) {\n    return {\n        type: RECEIVE_USERS,\n        users,\n    }\n}","import { saveQuestionAnswer, saveQuestion } from '../utils/api'\n\nexport const RECEIVE_QUESTIONS = 'GET_QUESTIONS'\nexport const ADD_QUESTION = 'ADD_QUESTION'\nexport const SAVE_QUESTIONS_ANSWER = 'SAVE_QUESTIONS_ANSWER'\n\nexport function receiveQuestions(questions) {\n    return {\n        type: RECEIVE_QUESTIONS,\n        questions\n    }\n}\n\nexport function addQuestion(question) {\n    return {\n        type: ADD_QUESTION,\n        question\n    }\n}\n\nexport function handleAddQuestion(optionOneText, optionTwoText) {\n    return (dispatch, getState) => {\n        const authedUser = getState()\n        console.log('USER:', authedUser)\n        return saveQuestion({\n            optionOneText,\n            optionTwoText,\n            author: authedUser.authedUser,\n        })\n            .then((question) => dispatch(addQuestion(question)))\n    }\n}\n\nexport function saveAnswer(answer) {\n    return {\n        type: SAVE_QUESTIONS_ANSWER,\n        answer,\n    }\n}\n\nexport function handleSaveAnswer(qid, answer) {\n    return (dispatch, getState) => {\n        const { authedUser } = getState()\n        return saveQuestionAnswer({\n            answer,\n            authedUser,\n            qid,\n        })\n            .then((answer) => dispatch(saveAnswer(answer)))\n    }\n}\n\n","export const SET_AUTHED_USER = 'SET_AUTHED_USER'\n\nexport function setAuthedUser(id) {\n    return {\n        type: SET_AUTHED_USER,\n        id\n    }\n}","import { getInitialData } from \"../utils/api\";\nimport { receiveUsers } from \"./users\";\nimport { receiveQuestions } from \"./questions\";\nimport { setAuthedUser } from \"./authedUser\";\nimport { showLoading, hideLoading } from \"react-redux-loading\";\n\nconst AUTHED_ID = \"sarahedo\";\n\nexport function handleInitialData() {\n  return (dispatch) => {\n    dispatch(showLoading());\n    return getInitialData().then(({ users, questions }) => {\n      dispatch(receiveUsers(users));\n      dispatch(receiveQuestions(questions));\n      dispatch(setAuthedUser(AUTHED_ID));\n      dispatch(hideLoading());\n    });\n  };\n}\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { formatQuestion } from '../utils/_DATA'\n\nclass Question extends Component {\n    render() {\n        const { optionOneText, user } = this.props\n        const { text } = optionOneText\n        const questionPreview = text.slice(0, 10) + '...'\n        const { name, avatarURL } = user\n        return (\n            <div className=\"question center\">\n                <div>\n                    <span>{name} asks: </span>\n                </div>\n\n                <div className='question-info'>\n                    <img\n                        src={avatarURL}\n                        alt={`Avatar of ${name}`}\n                        className='avatar'\n                    />\n                    <div>\n                        <h5>Would You Rather</h5>\n                        <p>...{questionPreview}</p>\n                        <button>View Poll</button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps({ authedUser, users, questions }, { id }) {\n    const question = questions[id]\n\n    const optionOneText = question.optionOne\n    const optionTwoText = question.optionTwo\n    const user = users[question.author]\n\n    return {\n        authedUser,\n        optionOneText,\n        user,\n        question: question ?\n            formatQuestion(question, optionOneText, optionTwoText, authedUser)\n            : null\n    }\n}\n\nexport default connect(mapStateToProps)(Question)","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport Question from './Question'\n\nclass Questions extends Component {\n    render() {\n        const { questionList } = this.props\n        return (\n            <div>\n                {questionList.map((id) => (\n                    <div key={id}>\n                        <Question id={id} />\n                    </div>\n                ))}\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps({ authedUser, users, questions }, { type }) {\n    const currentUser = users[authedUser]\n    const answeredQuestions = Object.keys(currentUser.answers)\n    const questionIds = Object.keys(questions).sort((a, b) => questions[b].timestamp - questions[a].timestamp)\n\n    if (type === \"unanswered\") {\n        const spreaded = [...questionIds, ...answeredQuestions];\n        const questionList = spreaded.filter(el => {\n            return !(questionIds.includes(el) && answeredQuestions.includes(el))\n\n        })\n        return {\n            currentUser,\n            questionList\n        }\n\n    } else if (type === \"answered\") {\n        const spreaded = [...answeredQuestions];\n        const questionList = spreaded.filter(el => {\n            return (answeredQuestions.includes(el))\n        })\n        return {\n            currentUser,\n            questionList\n        }\n\n    }\n\n}\n\nexport default connect(mapStateToProps)(Questions)","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport Questions from './Questions'\nimport Tabs from 'react-bootstrap/Tabs'\nimport Tab from 'react-bootstrap/Tab'\n\nclass Dashboard extends Component {\n    render() {\n        return (\n            <div className=\"center\">\n                <h3>Questions</h3>\n                <Tabs\n                    id=\"controlled-tab-example\"\n                    // activeKey={this.key}\n                    // onSelect={ }\n                    className=\"mb-3\"\n                >\n                    <Tab eventKey=\"home\" title=\"Unanswered questions\">\n                        <Questions type=\"unanswered\" />\n                    </Tab>\n                    <Tab eventKey=\"profile\" title=\"Answered Questions\">\n                        <Questions type=\"answered\" />\n                    </Tab>\n                </Tabs>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps({ questions }) {\n    return {\n        questionIds: Object.keys(questions)\n            .sort((a, b) => questions[b].timestamp - questions[a].timestamp)\n    }\n}\n\nexport default connect(mapStateToProps)(Dashboard)","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { handleAddQuestion } from '../actions/questions'\n\nclass NewQuestion extends Component {\n    state = {\n        optionOne: '',\n        optionTwo: ''\n    }\n\n    handleChange = (e) => {\n        const value = e.target.value\n\n        this.setState(() => ({\n            ...this.state,\n            [e.target.name]: value\n        }))\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault()\n\n        console.log('Option one: ', this.state.optionOne)\n        console.log('Option two: ', this.state.optionTwo)\n\n        const { dispatch } = this.props\n        dispatch(handleAddQuestion(this.state.optionOne, this.state.optionTwo))\n\n        this.setState(() => ({\n            optionOne: '',\n            optionTwo: '',\n        }))\n    }\n\n    render() {\n        const { optionOne, optionTwo } = this.state\n        return (\n            <div>\n                <h3 className='center'>Create New Question</h3>\n                <form className='new-question' onSubmit={this.handleSubmit}>\n                    <p>Would you rather...</p>\n                    <input\n                        placeholder=\"Enter Option One Text Here\"\n                        type='text'\n                        name='optionOne'\n                        value={optionOne}\n                        onChange={this.handleChange}\n                        className='textarea'\n                        maxLength={280}\n                    />\n                    <span>OR</span>\n                    <input\n                        placeholder=\"Enter Option Two Text Here\"\n                        type='text'\n                        name='optionTwo'\n                        value={optionTwo}\n                        onChange={this.handleChange}\n                        className='textarea'\n                        maxLength={280}\n                    />\n                    <button\n                        className='btn'\n                        type='submit'\n                    // disabled={text === ''}\n                    >\n                        Submit\n                    </button>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default connect()(NewQuestion)","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { formatQuestion } from \"../utils/_DATA\";\n\nclass Leaderboard extends Component {\n  render() {\n    const { usersList } = this.props;\n\n    return (\n      <div className=\"question leaderboard\">\n        {usersList.map((user, id) => {\n          const { name, avatarURL, answers, questions } = user;\n\n          const answeredQs = Object.keys(answers).length;\n          const createdQs = questions.length;\n          const score = answeredQs + createdQs;\n\n          return (\n            <div className=\"board\" key={id}>\n              <div className=\"leaderboard-grid\">\n                <div className=\"leaderboard-img\">\n                  <img\n                    src={avatarURL}\n                    alt={`Avatar of ${name}`}\n                    className=\"avatar\"\n                  />\n                </div>\n\n                <div className=\"leaderboard-info\">\n                  <h3>{name}</h3>\n                  <p>Answered Questions: {answeredQs}</p>\n                  <hr />\n                  <p>Created Questions: {createdQs}</p>\n                </div>\n\n                <div className=\"score\">\n                  <p>Score</p>\n                  <p>\n                    <span className=\"score-shape\">{score}</span>\n                  </p>\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps({ users }) {\n  const usersList = Object.values(users);\n\n  return {\n    usersList,\n  };\n}\n\nexport default connect(mapStateToProps)(Leaderboard);\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nexport default function Nav() {\n  return (\n    <nav className=\"nav\">\n      <ul>\n        <li>\n          <NavLink to=\"/\" exact activeClassName=\"active\">\n            Home\n          </NavLink>\n        </li>\n        <li>\n          <NavLink to=\"/add\" activeClassName=\"active\">\n            New Question\n          </NavLink>\n        </li>\n        <li>\n          <NavLink to=\"/leaderboard\" activeClassName=\"active\">\n            Leaderboard\n          </NavLink>\n        </li>\n      </ul>\n    </nav>\n  );\n}\n","import React, { Component, Fragment } from \"react\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { handleInitialData } from \"../actions/shared\";\nimport Dashboard from \"./Dashboard\";\nimport LoadingBar from \"react-redux-loading\";\nimport NewQuestion from \"./NewQuestion\";\nimport Leaderboard from \"./Leaderboard\";\nimport Nav from \"./Nav\";\n\nclass App extends Component {\n  componentDidMount() {\n    const { dispatch } = this.props;\n    dispatch(handleInitialData());\n  }\n\n  render() {\n    return (\n      <Router>\n        <Fragment>\n          <LoadingBar />\n          <div className=\"container\">\n            <Nav />\n            {this.props.loading === true ? null : (\n              <div>\n                <Route path=\"/\" exact component={Dashboard} />\n                <Route path=\"/add\" component={NewQuestion} />\n                <Route path=\"/leaderboard\" component={Leaderboard} />\n              </div>\n            )}\n          </div>\n        </Fragment>\n      </Router>\n    );\n  }\n}\n\nfunction mapStateToProps({ authedUser }) {\n  return {\n    loading: authedUser === null,\n  };\n}\n\nexport default connect(mapStateToProps)(App);\n","import { combineReducers } from \"redux\";\nimport users from \"./users\";\nimport questions from \"./questions\";\nimport authedUser from \"./authedUser\";\nimport { loadingBarReducer } from \"react-redux-loading\";\n\nexport default combineReducers({\n    authedUser,\n    users,\n    questions,\n    loadingBar: loadingBarReducer,\n})","import { SET_AUTHED_USER } from '../actions/authedUser'\n\nexport default function authedUser(state = null, action) {\n    switch (action.type) {\n        case SET_AUTHED_USER:\n            return action.id\n        default:\n            return state\n    }\n}","import { RECEIVE_USERS } from '../actions/users'\n\nexport default function users(state = {}, action) {\n    switch (action.type) {\n        case RECEIVE_USERS:\n            return {\n                ...state,\n                ...action.users\n            }\n        default:\n            return state\n    }\n}","import { RECEIVE_QUESTIONS, SAVE_QUESTIONS_ANSWER, ADD_QUESTION } from '../actions/questions'\n\nexport default function questions(state = {}, action) {\n    switch (action.type) {\n        case RECEIVE_QUESTIONS:\n            return {\n                ...state,\n                ...action.questions\n            }\n        case ADD_QUESTION:\n            return {\n                ...state,\n                [action.question.id]: action.question\n            }\n        case SAVE_QUESTIONS_ANSWER:\n            return {\n                ...state,\n                [action.questions.id.answer]: action.answer\n            }\n        default:\n            return state\n    }\n}","const logger = (store) => (next) => (action) => {\n    console.group(action.type)\n    console.log('The action is: ', action)\n    const returnValue = next(action)\n    console.log('The new state is: ', store.getState())\n    console.groupEnd()\n    return returnValue\n}\n\nexport default logger","import thunk from 'redux-thunk'\nimport logger from './logger'\nimport { applyMiddleware } from 'redux'\n\nexport default applyMiddleware(\n    thunk,\n    logger\n)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport reducer from './reducers'\nimport middleware from './middleware'\n\nconst store = createStore(reducer, middleware)\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n  ,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}